pipeline {
    agent any
    
    environment {
        CONTAINER_NAME = "my-django-app"
        IMAGE_NAME = "my-django-image"
    }

    stages {
        stage('Checkout') {
            steps {
                //Jenkins의 SCM (소스 코드 관리) 플러그인을 사용하여 Git 저장소로부터 소스 코드를 가져오는 역할
                checkout scm
            }
        }


        stage('Docker Delete') {
            steps {
                script {
                    try{
                        sh 'echo "Docker Delete Start"'
                        // 컨테이너 존재 시 삭제
                        sh "docker stop ${CONTAINER_NAME}"
                        sh "docker rm -f ${CONTAINER_NAME}"
                    }catch (Exception e){
                        echo "Docker container ${CONTAINER_NAME} does not exist. skip"
                    }
                    try{
                        // 이미지 존재 시 삭제
                        sh "docker image rm ${IMAGE_NAME}"
                    }catch (Exception e){
                        echo "Docker image ${IMAGE_NAME} does not exist. skip"
                    }
                }
            }
        }


        stage('Build') {
            steps {
                script {
                    // 현재 디렉토리의 파일 및 디렉토리 목록 출력
                    sh 'ls'
                    dir('Data') {
                        // 변경된 디렉토리에서 명령어 실행
                        sh 'ls'
                        sh 'echo "Hello from the changed directory"'
                        // de
                        sh "docker build -t ${IMAGE_NAME} -f Dockerfile ."
                        
                        sh "docker images"
                    }
                }
            }
        }

        stage('Collect Static Files') {
            steps {
                script {
                    sh "docker run --rm -v ${pwd()}/Data:/app ${IMAGE_NAME} python manage.py collectstatic --noinput"
                }
            }
        }
        stage('Deploy') {
            steps {
                sh "docker run -d --name ${CONTAINER_NAME} -p 8000:8000 ${IMAGE_NAME}"
                sh "docker ps"
            }
        }
    }

}
