pipeline {
    agent any

    environment {
        CONTAINER_NAME = "hardcore_zhukovsky"
        IMAGE_NAME = "nangpadaepa"
    }

    tools {
        gradle 'gradle'
    }

    stages {
        stage('Git Clone') {
            steps {
                git branch: 'Back', credentialsId: 'jenkins_token',
                    url: 'https://lab.ssafy.com/s09-webmobile1-sub2/S09P12B202.git'
            }
            post {
                success {
                    sh 'echo "Successfully Cloned Repository"'
                }
                failure {
                    sh 'echo "Fail Cloned Repository"'
                }
            }
        }

        stage('Build') {
            steps {
                dir('Backend/NangPaDaePa') {
                    sh 'chmod +x gradlew'
                    sh './gradlew clean build'
                    // 디버깅
                    sh 'ls -al ./build'
                    sh './gradlew build --stacktrace'
                }
            }
            post {
                success {
                    echo 'gradle build success'
                }

                failure {
                    echo 'gradle build failed'
                }
            }
        }

        stage('Docker Delete') {
            steps {
                sh 'echo "Docker Delete Start"'
                // 컨테이너 존재 시 삭제
                sh "docker stop ${CONTAINER_NAME}"
                sh "docker rmi -f ${CONTAINER_NAME}"
                // 이미지 존재 시 삭제
                sh "docker image rm ${IMAGE_NAME}"
            }
            post {
                success {
                    sh 'echo "Docker Rm Success"'
                }
                failure {
                    sh 'echo "Docker Rm Fail"'
                }
            }
        }

        stage('Dockerizing'){
            steps{
                sh 'echo " Image Bulid Start"'
                dir('Backend/NangPaDaePa') {
                    sh 'sudo build -t ${IMAGE_NAME}'
                }
            }
            post {
                success {
                    sh 'echo "Bulid Docker Image Success"'
                }

                failure {
                    sh 'echo "Bulid Docker Image Fail"'
                }
            }
        }

        stage('Deploy') {
            steps {
                sh 'docker run --name ${CONTAINER_NAME} -d -p8080:8080 ${IMAGE_NAME}'
            }

            post {
                success {
                    echo 'Deploy success'
                }

                failure {
                    echo 'Deploy failed'
                }
            }
        }
    }
}
